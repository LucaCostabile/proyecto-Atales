name: CI - API Gateway

on:
  push:
    branches: [ dev, test, main ]
    paths:
      - 'backend/api-gateway/**'
      - '.github/workflows/gateway-ci.yml'

env:
  IMAGE_NAME: luca011/api-gateway-atales

jobs:
  build-and-update-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Generar TAG dinámico
        id: vars
        run: echo "TAG=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push gateway image
        uses: docker/build-push-action@v5
        with:
          context: ./backend/api-gateway
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ github.ref_name }}-${{ env.TAG }}

      - name: Checkout repo de infraestructura
        uses: actions/checkout@v3
        with:
          repository: LucaCostabile/infrastructura-Atales
          path: infra
          token: ${{ secrets.PAT_GITHUB }}

      - name: Cambiar a la rama correspondiente
        run: |
          cd infra
          BRANCH=${{ github.ref_name }}
          git fetch origin $BRANCH
          git checkout -b $BRANCH origin/$BRANCH || git checkout $BRANCH

      - name: Instalar kubeseal
        run: |
          wget https://github.com/bitnami-labs/sealed-secrets/releases/download/v0.18.0/kubeseal-0.18.0-linux-amd64.tar.gz
          tar -xvzf kubeseal-0.18.0-linux-amd64.tar.gz
          sudo install -m 755 kubeseal /usr/local/bin/kubeseal

      - name: Actualizar Sealed Secrets (sin kubectl)
        run: |
          cd infra
          
          # Determinar el ambiente basado en la rama
          case "${{ github.ref_name }}" in
            "main") ENV="prod" ;;
            "test") ENV="test" ;;
            *) ENV="dev" ;;
          esac
          
          echo "Actualizando sealed secrets para ambiente: $ENV"
          
          mkdir -p "sealed-secrets/$ENV"
          
          if [ ! -f "sealed-secrets-cert.pem" ]; then
            echo "❌ Error: No se encontró sealed-secrets-cert.pem"
            exit 1
          fi
          
          cat > temp-secret.yaml << EOF
          apiVersion: v1
          kind: Secret
          metadata:
            name: gateway-secrets
            namespace: $ENV
          type: Opaque
          data:
            JWT_SECRET_KEY: $(echo -n "${{ secrets.JWT_SECRET_KEY }}" | base64 -w 0)
          EOF
          
          kubeseal --cert sealed-secrets-cert.pem -f temp-secret.yaml -w "sealed-secrets/$ENV/gateway-sealed-secrets.yaml"
          
          rm temp-secret.yaml
          
          echo "✅ Sealed secret actualizado para ambiente $ENV"

      - name: Actualizar imagen en Deployment
        run: |
          cd infra
          DEPLOY_FILE="base/api-gateway/deployment-api-gateway.yaml"
          NEW_IMAGE="${{ env.IMAGE_NAME }}:${{ github.ref_name }}-${{ env.TAG }}"

          if [ ! -f "$DEPLOY_FILE" ]; then
            echo "❌ No se encuentra $DEPLOY_FILE"
            exit 1
          fi

          sed -i "s|^\(\s*image:\s*\).*|\1$NEW_IMAGE|g" "$DEPLOY_FILE"

          echo "✅ Imagen actualizada en $DEPLOY_FILE"

      - name: Commit y push cambios
        run: |
          cd infra
          git config user.email "lucacostabile011@gmail.com"
          git config user.name "Luca Costabile CI"

          BRANCH=${{ github.ref_name }}
          ENV=$([[ "$BRANCH" == "main" ]] && echo "prod" || [[ "$BRANCH" == "test" ]] && echo "test" || echo "dev")

          git pull --no-rebase origin $BRANCH
          
          git add "sealed-secrets/$ENV/gateway-sealed-secrets.yaml"
          git add "base/api-gateway/deployment-api-gateway.yaml"

          if ! git diff --cached --quiet; then
            git commit -m "ci(gateway): actualiza imagen a ${{ github.ref_name }}-${{ env.TAG }} y sealed secrets"
            git push origin $BRANCH
            echo "✅ Cambios aplicados para $BRANCH"
          else
            echo "ℹ️ No hay cambios para commitear"
          fi
